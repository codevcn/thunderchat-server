syntax = "proto3";

package chat;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";

service UserConnectionService {
  rpc GetConnectedClientsCountForAdmin(google.protobuf.Empty)
      returns (ConnectedClientsCountResponse);
  rpc EmitToDirectChat(EmitToDirectChatRequest) returns (google.protobuf.Empty);
  rpc SendNewMessageToGroupChat(SendNewMessageToGroupChatRequest)
      returns (google.protobuf.Empty);
  rpc SendFriendRequest(SendFriendRq) returns (google.protobuf.Empty);
  rpc RemoveConnectedClient(RemoveConnectedClientRequest)
      returns (google.protobuf.Empty);
  rpc CheckUserIsOnline(CheckUserIsOnlineRequest)
      returns (CheckUserIsOnlineResponse);
  rpc FriendRequestAction(FriendRequestActionRequest)
      returns (google.protobuf.Empty);
}

message ConnectedClientsCountResponse {
  int32 count = 1;
}

message EmitToDirectChatRequest {
  string event = 1;
  int32 direct_chat_id = 2;
  google.protobuf.Any payload = 3;
}

message SendNewMessageToGroupChatRequest {
  int32 group_chat_id = 2;
  google.protobuf.Struct new_message = 3;
}

message SendFriendRq {
  google.protobuf.Struct sender = 1;
  int32 recipientId = 2;
  google.protobuf.Struct requestData = 3;
}

message RemoveConnectedClientRequest {
  int32 userId = 1;
  optional string socketId = 2;
}

message CheckUserIsOnlineRequest {
  int32 userId = 1;
}

message CheckUserIsOnlineResponse {
  bool is_online = 1;
}

message FriendRequestActionRequest {
  int32 sender_id = 1;
  int32 request_id = 2;
  string action = 3;
}
