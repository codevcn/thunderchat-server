// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: user.proto

/* eslint-disable */
import { Observable } from 'rxjs'

export const protobufPackage = 'user'

export interface TestRequest {
  messageVcnReq: string
}

export interface TestResponse {
  messageVcnRes: string
}

export interface FindUserWithProfileByIdRequest {
  userId: number
}

export interface FindUserWithProfileByIdResponse {
  userJson: string
}

export interface FindByUserIdRequest {
  userId: number
}

export interface FindByUserIdResponse {
  userSettingsJson: string
}

export interface CheckBlockedUserRequest {
  blockerId: number
  blockedId: number
}

export interface CheckBlockedUserResponse {
  blockedUserJson?: string | undefined
}

export interface GetUserByEmailRequest {
  email: string
}

export interface GetUserByEmailResponse {
  userJson: string
}

export interface FindByIdRequest {
  id: number
}

export interface FindByIdResponse {
  userJson: string
}

export interface findUsersForGlobalSearchRq {
  ids: number[]
  selfUserId: number
  limit: number
}

export interface findUsersForGlobalSearchRp {
  usersJson: string[]
}

export interface UserService {
  FindUserWithProfileById(
    request: FindUserWithProfileByIdRequest
  ): Observable<FindUserWithProfileByIdResponse>
  GetUserByEmail(request: GetUserByEmailRequest): Observable<GetUserByEmailResponse>
  FindById(request: FindByIdRequest): Observable<FindByIdResponse>
  findUsersForGlobalSearch(
    request: findUsersForGlobalSearchRq
  ): Observable<findUsersForGlobalSearchRp>
  Test(request: TestRequest): Observable<TestResponse>
}

export interface UserSettingsService {
  FindByUserId(request: FindByUserIdRequest): Observable<FindByUserIdResponse>
}

export interface BlockUserService {
  CheckBlockedUser(request: CheckBlockedUserRequest): Observable<CheckBlockedUserResponse>
}
