// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: conversation.proto

/* eslint-disable */
import { Observable } from 'rxjs'
import type { Empty } from './google/protobuf/empty'

export const protobufPackage = 'conversation'

export interface GetNewerDirectMessagesRequest {
  messageOffset: number
  directChatId?: number | undefined
  groupChatId?: number | undefined
  limit: number
}

export interface GetNewerDirectMessagesResponse {
  messagesJson: string[]
}

export interface FindConversationWithOtherUserRequest {
  userId: number
  otherUserId: number
}

export interface FindConversationWithOtherUserResponse {
  directChatJson?: string | undefined
}

export interface CreateNewDirectChatRequest {
  creatorId: number
  recipientId: number
}

export interface CreateNewDirectChatResponse {
  newDirectChatJson: string
}

export interface FindGroupChatMemberIdsRequest {
  groupChatId: number
}

export interface FindGroupChatMemberIdsResponse {
  memberIds: number[]
}

export interface CreateNewMessageRequest {
  encryptedContent: string
  authorId: number
  timestamp: Date | undefined
  type: string
  recipientId?: number | undefined
  stickerId?: number | undefined
  mediaId?: number | undefined
  replyToId?: number | undefined
  directChatId?: number | undefined
  groupChatId?: number | undefined
}

export interface CreateNewMessageResponse {
  newMessageJson: string
}

export interface UpdateLastSentMessageRequest {
  lastSentMessageId: number
  directChatId: number
}

export interface UpdateMessageStatusRequest {
  msgId: number
  status: string
}

export interface UpdateMessageStatusResponse {
  messageJson: string
}

export interface FindDirectChatByIdRequest {
  directChatId: number
}

export interface FindDirectChatByIdResponse {
  directChatJson?: string | undefined
}

export interface FindMemberInGroupChatRequest {
  groupChatId: number
  userId: number
}

export interface FindMemberInGroupChatResponse {
  groupChatMemberJson?: string | undefined
}

export interface CheckGroupChatPermissionRequest {
  groupChatId: number
  permission: string
}

export interface CheckGroupChatPermissionResponse {
  allowed: boolean
}

export interface FindMessagesForGlobalSearchRequest {
  ids: number[]
  limit: number
}

export interface FindMessagesForGlobalSearchResponse {
  messagesJson: string[]
}

export interface DirectChatService {
  FindConversationWithOtherUser(
    request: FindConversationWithOtherUserRequest
  ): Observable<FindConversationWithOtherUserResponse>
  CreateNewDirectChat(request: CreateNewDirectChatRequest): Observable<CreateNewDirectChatResponse>
  UpdateLastSentMessage(request: UpdateLastSentMessageRequest): Observable<Empty>
  findById(request: FindDirectChatByIdRequest): Observable<FindDirectChatByIdResponse>
}

export interface GroupMemberService {
  FindMemberInGroupChat(
    request: FindMemberInGroupChatRequest
  ): Observable<FindMemberInGroupChatResponse>
  FindGroupChatMemberIds(
    request: FindGroupChatMemberIdsRequest
  ): Observable<FindGroupChatMemberIdsResponse>
}

export interface MessageService {
  GetNewerDirectMessages(
    request: GetNewerDirectMessagesRequest
  ): Observable<GetNewerDirectMessagesResponse>
  CreateNewMessage(request: CreateNewMessageRequest): Observable<CreateNewMessageResponse>
  UpdateMessageStatus(request: UpdateMessageStatusRequest): Observable<UpdateMessageStatusResponse>
  FindMessagesForGlobalSearch(
    request: FindMessagesForGlobalSearchRequest
  ): Observable<FindMessagesForGlobalSearchResponse>
}

export interface GroupChatService {
  CheckGroupChatPermission(
    request: CheckGroupChatPermissionRequest
  ): Observable<CheckGroupChatPermissionResponse>
}
